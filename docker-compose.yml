version: "3.5"
services:
  nginx:
    image: "nginx:1.19.9-alpine"
    restart: unless-stopped
    container_name: drugstore_nginx
    volumes:
      - "./nginx/conf:/etc/nginx/conf.d"
      - "./angular/build:/var/www/html"
    ports:
      - "80:80"
    command: /bin/sh -c "nginx -g 'daemon off;'"
    depends_on:
      - micronaut
      - nestjs
  redis:
    image: "redis:alpine"
    container_name: drugstore_redis
    ports:
      - "6379:6379"
  redis-commander:
    image: rediscommander/redis-commander
    container_name: drugstore_redis_commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
  postgres:
    image: "postgres:alpine"
    container_name: drugstore_postgres
    ports:
      - "5432:5432"
    volumes:
      - "./postgres/data:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres123
  adminer:
    image: adminer
    container_name: drugstore_adminer
    restart: always
    ports:
      - "8000:8080"
  nestjs:
    container_name: drugstore_nestjs
    build:
      context: ./nestjs/
      target: production
      dockerfile: ./Dockerfile
    command: "npm run start:prod"
    environment:
      - DATABASE_TYPE=postgres
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres123
      - DATABASE_DB=postgres
      - CACHE_HOST=redis
      - CACHE_PORT=6379
    ports:
      - "3000:3000"
    volumes:
      - "./nestjs:/usr/src/app"
      - "./nestjs/node_modules:/usr/src/app/node_modules"
    depends_on:
      - postgres
      - redis
  micronaut:
    build: ./micronaut/
    container_name: drugstore_micronaut
    environment:
      - MICRONAUT_ENVIRONMENTS=
      - REDIS_HOST=redis
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
  angular:
    build: ./angular/
    container_name: drugstore_angular
    volumes:
      - "./angular/build:/usr/src/app/dist"
